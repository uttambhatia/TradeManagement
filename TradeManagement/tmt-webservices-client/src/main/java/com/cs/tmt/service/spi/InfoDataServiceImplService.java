package com.cs.tmt.service.spi;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import com.cs.tmt.service.api.InfoDataService;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.7
 * 2019-01-03T19:42:39.976+05:30
 * Generated source version: 3.2.7
 *
 */
@WebServiceClient(name = "InfoDataServiceImplService",
                  wsdlLocation = "file:/D:/Sample%20Projects/CTS/apache-cxf-ws-client/src/main/resources/InfoDataService.wsdl",
                  targetNamespace = "http://spi.service.tmt.cs.com/")
public class InfoDataServiceImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://spi.service.tmt.cs.com/", "InfoDataServiceImplService");
    public final static QName InfoDataServiceImplPort = new QName("http://spi.service.tmt.cs.com/", "InfoDataServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/D:/Sample%20Projects/CTS/apache-cxf-ws-client/src/main/resources/InfoDataService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(InfoDataServiceImplService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/D:/Sample%20Projects/CTS/apache-cxf-ws-client/src/main/resources/InfoDataService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public InfoDataServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public InfoDataServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public InfoDataServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public InfoDataServiceImplService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public InfoDataServiceImplService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public InfoDataServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns InfoDataService
     */
    @WebEndpoint(name = "InfoDataServiceImplPort")
    public InfoDataService getInfoDataServiceImplPort() {
        return super.getPort(InfoDataServiceImplPort, InfoDataService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns InfoDataService
     */
    @WebEndpoint(name = "InfoDataServiceImplPort")
    public InfoDataService getInfoDataServiceImplPort(WebServiceFeature... features) {
        return super.getPort(InfoDataServiceImplPort, InfoDataService.class, features);
    }

}
